/**
 * use https://codebeautify.org/minify-js to minify wearengine.js
 */

import wearengine from"@system.wearengine";var WearEngineConst={DELAY_FILEAPP_VALUE:"internal://app/",DEFAULT_EMPTY_VALUE:""},ErrorCode={MSG_ERROR_PING_WATCH_APP_NOT_EXIST:200,MSG_ERROR_PING_WATCH_APP_NOT_RUNNING:201,MSG_ERROR_PING_WATCH_APP_EXIST_RUNNING:202,MSG_ERROR_PING_OTHER:203,MSG_ERROR_PING_PHONE_APP_NOT_EXIST:204,MSG_ERROR_PING_PHONE_APP_NOT_RUNNING:205,MSG_ERROR_SEND_FAIL:206,MSG_ERROR_SEND_SUCCESS:207,MSG_ERROR_CODE_VERSION_TOO_LOW:208},MessageType={MESSAGE_TYPE_DATA:0,MESSAGE_TYPE_FILE:1},WEARENGINE_SERVICE_VISION_302=302,WEARENGINE_SERVICE_VISION_303=303,WEARENGINE_SDK_VERSION="3",FILE_PUNLIC_PATH_INTERCETPED=15,DEFAULT_EMPTY_FINGERPRINT=" ",P2pClient=function(){function e(){try{var e=this;wearengine.getWearEngineVersion({complete:function(n){if(n){var o=n.split(".");e.version=o[o.length-1],console.info("service sdk version is: "+n)}else e.version=0,console.info("get service sdk version failed")},sdkVersion:WEARENGINE_SDK_VERSION})}catch(n){e.version=0,console.info("service sdk version is too low"+n.message)}}function n(e){return"undefined"==e||null==e||""==e||" "==e}return e.prototype.setPeerPkgName=function(e){this.peerPkgName=e,this.version<WEARENGINE_SERVICE_VISION_303?console.info("ERROR_CODE_VERSION_TOO_LOW setPackageName is invalid"):wearengine.setPackageName({appName:e,complete:function(){console.info("setPeerPkgName success.")},fail:function(){console.info("setPeerPkgName fail.")}})},e.prototype.setPeerFingerPrint=function(e){if(this.version<WEARENGINE_SERVICE_VISION_302)return console.info("setPeerFingerPrint interface invalid"),{data:"ERROR_CODE_VERSION_TOO_LOW",code:ErrorCode.MSG_ERROR_CODE_VERSION_TOO_LOW};n(e)&&(e=DEFAULT_EMPTY_FINGERPRINT),this.peerFingerPrint=e;wearengine.setFingerprint({appName:this.peerPkgName,appCert:e,complete:function(){console.info("setPeerFingerPrint success.")},fail:function(){console.error("setPeerFingerPrint failed.")}})},e.prototype.ping=function(e){var o={data:" ERROR_CODE_P2P_PHONE_APP_EXIST",code:ErrorCode.MSG_ERROR_PING_PHONE_APP_NOT_RUNNING},r={data:"ERROR_CODE_P2P_PHONE_APP_NOT_EXIST",code:ErrorCode.MSG_ERROR_PING_PHONE_APP_NOT_EXIST},i={data:"ERROR_CODE_P2P_OTHER_ERROR",code:ErrorCode.MSG_ERROR_PING_OTHER};if(n(this.peerPkgName))return e.onFailure(),void e.onPingResult(r);FeatureAbility.detect({bundleName:this.peerPkgName,success:function(){e.onSuccess(),e.onPingResult(o),console.info("ping success.")},fail:function(n,o){n||o?(e.onFailure(),e.onPingResult(i)):(e.onFailure(),e.onPingResult(r)),console.error("ping failed.")}})},e.prototype.registerReceiver=function(e){if(e){if(this.version>WEARENGINE_SERVICE_VISION_302){if(n(this.peerPkgName))return console.error("peerPkgName cannot be empty"),void e.onFailure();wearengine.setPackageName({appName:this.peerPkgName,complete:function(){console.info("registerReceiver setPeerPkgName success.")},fail:function(){console.info("registerReceiver setPeerPkgName fail.")}})}if(n(this.peerFingerPrint))return console.error("peerFingerPrint cannot be empty"),void e.onFailure();FeatureAbility.subscribeMsg({success:function(n){if(n)if(n.isRegister)e.onSuccess();else if(n.isFileType){var o={isFileType:!0,name:n.file,mode:"",mode2:""};e.onReceiveMessage(o),console.info("receive file name:"+o.name)}else e.onReceiveMessage(n.message),console.info("receive message:"+n.message);else e.onSuccess()},fail:e.onFailure})}},e.prototype.send=function(e,o){if(e&&o){var r={data:"peerPkgName or peerFingerPrint empty",code:ErrorCode.MSG_ERROR_SEND_FAIL};if(n(this.peerPkgName)||n(this.peerFingerPrint))return console.error("peerPkgName or peerFingerPrint cannot be empty"),o.onFailure(),void o.onSendResult(r);if(e.getType()==MessageType.MESSAGE_TYPE_DATA){var i=function(){var e={data:"ERROR_CODE_COMM_SUCCESS",code:ErrorCode.MSG_ERROR_SEND_SUCCESS};o.onSuccess(),o.onSendResult(e),o.onSendProgress("100%"),console.info("send message success.")},s=function(e,n){var r={data:e,code:ErrorCode.MSG_ERROR_SEND_FAIL};o.onFailure(),o.onSendResult(r),o.onSendProgress("0%"),console.error("send message failed.")};FeatureAbility.sendMsg({deviceId:"remote",bundleName:this.peerPkgName,abilityName:"",message:e.getData(),success:i,fail:s})}else{if(this.version<WEARENGINE_SERVICE_VISION_302){console.info("not support send file");var t={data:"ERROR_CODE_VERSION_TOO_LOW",code:ErrorCode.MSG_ERROR_CODE_VERSION_TOO_LOW};return o.onFailure(),void o.onSendResult(t)}var E=e.getFile().name;if(this.version<WEARENGINE_SERVICE_VISION_303)if(E.substring(0,FILE_PUNLIC_PATH_INTERCETPED)==WearEngineConst.DELAY_FILEAPP_VALUE){t={data:"ERROR_CODE_VERSION_TOO_LOW",code:ErrorCode.MSG_ERROR_CODE_VERSION_TOO_LOW};return o.onFailure(),o.onSendResult(t),void console.info("wearEngine service version too low, file path not support")}i=function(){var e={data:"ERROR_CODE_COMM_SUCCESS",code:ErrorCode.MSG_ERROR_SEND_SUCCESS};o.onSuccess(),o.onSendResult(e)},s=function(e,n){var r={data:e,code:ErrorCode.MSG_ERROR_SEND_FAIL};o.onFailure(),o.onSendResult(r)};wearengine.uploadFile({fileName:E,filePath:this.peerPkgName,peerPackageName:this.peerPkgName,success:i,fail:s,progress:function(e){o.onSendProgress(e.progressNum+"%"),console.info("progress of sending file: "+e.progressNum+"%")}})}}},e.prototype.unregisterReceiver=function(e){FeatureAbility.unsubscribeMsg(),e.onSuccess()},e}(),File=function(){},Builder=function(){function e(){}return e.prototype.setDescription=function(e){this.messageInfo=e,this.messageType=MessageType.MESSAGE_TYPE_DATA},e.prototype.setPayload=function(e){if(e)return"object"==typeof e&&e.name?(this.messageType=MessageType.MESSAGE_TYPE_FILE,this.setFilePlayload(e)):(this.messageType=MessageType.MESSAGE_TYPE_DATA,this.setBufferPlayload(e))},e.prototype.setBufferPlayload=function(e){this.messageInfo=String.fromCharCode.apply(null,new Uint16Array(e))},e.prototype.setFilePlayload=function(e){this.messageInfo=JSON.stringify(e)},e}(),Message=function(){new Builder;function e(){}return e.prototype.describeContents=function(){return this.builder.messageInfo},e.prototype.getData=function(){return this.builder.messageInfo},e.prototype.getDescription=function(){return this.builder.messageInfo},e.prototype.getFile=function(){return this.builder.messageType==MessageType.MESSAGE_TYPE_FILE?JSON.parse(this.builder.messageInfo):null},e.prototype.getType=function(){return this.builder.messageType},e}();export{P2pClient,Message,Builder};